{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract-component.js","webpack:///./src/components/board-controller.js","webpack:///./src/components/board.js","webpack:///./src/components/data.js","webpack:///./src/components/filter-sec.js","webpack:///./src/components/filter.js","webpack:///./src/components/load-more-button.js","webpack:///./src/components/no-tasks.js","webpack:///./src/components/search.js","webpack:///./src/components/sitemenu.js","webpack:///./src/components/sorting.js","webpack:///./src/components/task-edit.js","webpack:///./src/components/task-list.js","webpack:///./src/components/task.js","webpack:///./src/components/utils.js","webpack:///./src/main.js"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAuD;;AAEhD,qBAAqB,qEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sBAAsB,aAAa;AACnC;AACA,wBAAwB;AACxB;AACA,0BAA0B,aAAa;AACvC,QAAQ,aAAa,mCAAmC,aAAa;AACrE;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAuD;;AAEhD,6BAA6B,qEAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAuD;;AAEhD,sBAAsB,qEAAiB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAuD;;AAEhD,qBAAqB,qEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAuD;;AAEhD,mBAAmB,qEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAuD;;AAEhD,mBAAmB,qEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAuD;;AAEhD,uBAAuB,qEAAiB;AAC/C,eAAe,iDAAiD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY,GAAG,oFAAoF;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B,GAAG,yBAAyB,GAAG,2BAA2B;AAC5H;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,uCAAuC,IAAI;AAC3C;AACA;AACA;AACA,gCAAgC;AAChC;AACA,8EAA8E,IAAI;AAClF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChQA;AAAA;AAAA;AAAuD;;AAEhD,uBAAuB,qEAAiB;AAC/C;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAuD;;AAEhD,mBAAmB,qEAAiB;AAC3C,eAAe,iDAAiD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY,GAAG,oFAAoF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,kBAAkB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD,6BAA6B;AAClF;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA,uEAAuE,IAAI;AAC3E,8EAA8E,IAAI;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;;AAEA;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AACW;AACtD,WAAW,OAAO;AACuB;AACC;AAC1C,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB,WAAW,eAAe;AACiB;AACS;AACpD,WAAW,QAAQ;AAC2C;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;;AAEA,gEAAM,wBAAwB,yDAAI,iBAAiB,0DAAQ;AAC3D,gEAAM,sBAAsB,yDAAM,iBAAiB,0DAAQ;AAC3D,gEAAM,sBAAsB,oEAAa,iBAAiB,0DAAQ;AAClE,gEAAM,sBAAsB,uDAAK,iBAAiB,0DAAQ;;AAE1D;AACA,gEAAM,mBAAmB,wDAAI,iBAAiB,0DAAQ;;AAEtD;AACA,4BAA4B,4EAAe,iBAAiB,iEAAQ;AACpE;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from \"./utils\";\n\nexport class AbstractComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n  getTemplate() {\n    throw Error(`Abstract method not implemented`);\n  }\n}\n","import {Board} from './board';\nimport {TaskList} from './task-list';\nimport {render, unrender, Position} from './utils';\nimport {Task} from './task';\nimport {TaskEdit} from './task-edit';\nimport {NoTasks} from './no-tasks';\nimport {LoadMoreButton} from './load-more-button';\nimport {loadTask, taskFilters} from './data';\nimport {Filter} from './filter';\nimport {FilterSection} from './filter-sec';\n\nexport class BoardController {\n  constructor(container, tasks) {\n    this._container = container;\n    this._tasks = tasks;\n    this._board = new Board();\n    this._taskList = new TaskList();\n    this._noTasks = new NoTasks();\n    this._loadMoreButton = new LoadMoreButton();\n    this._filterSection = new FilterSection();\n    this._filter = new Filter(taskFilters);\n  }\n  init() {\n    render(this._container, this._board.getElement(), Position.BEFOREEND);\n    render(this._board.getElement(), this._taskList.getElement(), Position.BEFOREEND);\n\n    const renderTask = (container, taskMock) => {\n      const task = new Task(taskMock);\n      const taskEdit = new TaskEdit(taskMock);\n\n      const onEscKeyDown = (evt) => {\n        if (evt.key === `Escape` || evt.key === `Esc`) {\n          container.replaceChild(task.getElement(), taskEdit.getElement());\n          document.removeEventListener(`keydown`, onEscKeyDown);\n        }\n      };\n\n      task.getElement()\n        .querySelector(`.card__btn--edit`)\n        .addEventListener(`click`, () => {\n          container.replaceChild(taskEdit.getElement(), task.getElement());\n          document.addEventListener(`keydown`, onEscKeyDown);\n        });\n\n      taskEdit.getElement().querySelector(`textarea`)\n        .addEventListener(`focus`, () => {\n          document.removeEventListener(`keydown`, onEscKeyDown);\n        });\n\n      taskEdit.getElement().querySelector(`textarea`)\n        .addEventListener(`blur`, () => {\n          document.addEventListener(`keydown`, onEscKeyDown);\n        });\n\n      taskEdit.getElement()\n        .querySelector(`.card__save`)\n        .addEventListener(`click`, () => {\n          container.replaceChild(task.getElement(), taskEdit.getElement());\n          document.removeEventListener(`keydown`, onEscKeyDown);\n        });\n\n      taskEdit.getElement().querySelector(`.card__delete`)\n        .addEventListener(`click`, () => {\n          unrender(taskEdit.getElement());\n          taskEdit.removeElement();\n        });\n\n      render(container, task.getElement(), Position.BEFOREEND);\n    };\n\n    const taskListElement = this._container.querySelector(`.board__tasks`);\n\n    loadTask().forEach((taskMock) => renderTask(taskListElement, taskMock));\n\n    render(this._filterSection.getElement(), this._Filter(taskFilters).getElement(), Position.BEFOREEND);\n\n    render(this._board, this._LoadMoreButton().getElement(), Position.BEFOREEND);\n\n    const tasksElement = () => Array.from(document.querySelectorAll(`article`));\n    const loadButtonElement = document.querySelector(`.load-more`);\n\n    const hideLoadButton = () => {\n      loadButtonElement.style.display = `none`;\n    };\n    const displayLoadButton = () => {\n      loadButtonElement.style.display = `block`;\n    };\n\n    const hideMoreTasks = (quantity) => {\n      Array.from(tasksElement())\n        .slice(quantity)\n        .forEach((el) => {\n          el.style.display = `none`;\n        });\n    };\n\n    const QUANTITY_LOAD_TASK = 8;\n\n    const tasksToLoad = () => tasksElement()\n      .filter((el, index) =>\n        el.style.display === `none` && index >= QUANTITY_LOAD_TASK);\n\n    const toogleLoadButton = () =>\n      tasksToLoad().length > 0 ? displayLoadButton() : hideLoadButton();\n\n    const addMoreTasks = () => {\n      tasksToLoad(QUANTITY_LOAD_TASK)\n        .slice(0, QUANTITY_LOAD_TASK)\n        .map((it) => {\n          it.style.display = `block`;\n        });\n    };\n\n    if (tasksElement().length > QUANTITY_LOAD_TASK) {\n      hideMoreTasks(QUANTITY_LOAD_TASK);\n    }\n\n    loadButtonElement.addEventListener(`click`, () => {\n      addMoreTasks();\n      toogleLoadButton();\n    });\n\n    const archiveTasks = taskFilters.find((item) => item.title === `ARCHIVE`);\n    if ((taskListElement.childElementCount === 0) || (archiveTasks && archiveTasks.count === taskListElement.childElementCount)) {\n      Array.from(this._board.children).forEach((it) => {\n        unrender(it);\n      });\n      render(this._board, this._NoTasks().getElement(), Position.BEFOREEND);\n    }\n\n\n  }\n\n\n}\n\n","import {AbstractComponent} from './abstract-component';\n\nexport class Board extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<section class=\"board container\">\n    </section>`;\n  }\n}\n","import {MILLISECONDS_IN_DAY, getRandElementFromArr, getRandSeveralElementsFromArr, getRandTime, getRandBoolean} from './utils';\n\nconst COUNT_TAGS = 3;\nexport const TASK_COUNT = 10;\n\nconst arrDescription = [\n  `Изучить теорию`,\n  `Сделать домашку`,\n  `Пройти интенсив на соточку`\n];\n\nconst arrTags = [\n  `homework`,\n  `theory`,\n  `practice`,\n  `intensive`,\n  `keks`,\n  `test`,\n  `refactoring`\n];\n\nconst arrColors = [\n  `black`,\n  `yellow`,\n  `blue`,\n  `green`,\n  `pink`,\n];\n\nconst getTask = () => ({\n  description: getRandElementFromArr(arrDescription),\n  dueDate: getRandTime(),\n  repeatingDays: {\n    'mo': false,\n    'tu': false,\n    'we': getRandBoolean(),\n    'th': false,\n    'fr': false,\n    'sa': false,\n    'su': false,\n  },\n  tags: getRandSeveralElementsFromArr(arrTags, COUNT_TAGS),\n  color: getRandElementFromArr(arrColors),\n  isFavorite: getRandBoolean(),\n  isArchive: getRandBoolean(),\n});\n\nexport const taskFilters = [{\n  title: `All`,\n  filter: () => true,\n  count: 0,\n}, {\n  title: `OVERDUE`,\n  filter: (task) => task.dueDate < Date.now(),\n  count: 0,\n}, {\n  title: `TODAY`,\n  filter: (task) => (task.dueDate < Date.now() + MILLISECONDS_IN_DAY) && (task.dueDate > Date.now() - MILLISECONDS_IN_DAY),\n  count: 0,\n}, {\n  title: `FAVORITES`,\n  filter: (task) => task.isFavorite,\n  count: 0,\n}, {\n  title: `REPEATING`,\n  filter: (task) => Object.keys(task.repeatingDays).some((day) => task.repeatingDays[day]).length,\n  count: 0,\n}, {\n  title: `ARCHIVE`,\n  filter: (task) => task.isArchive,\n  count: 0,\n}, {\n  title: `TAGS`,\n  filter: () => (task) => task.tags.size.length,\n  count: 0,\n}];\n\nconst countFilter = (filters, tasks) => {\n  for (const el of filters) {\n    el.count = tasks.filter(el.filter).length;\n  }\n};\n\nexport const loadTask = () => Array.from({length: TASK_COUNT}, getTask);\n\ncountFilter(taskFilters, loadTask());\n","import {AbstractComponent} from './abstract-component';\n\nexport class FilterSection extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<section class=\"main__filter filter container\">\n    </section>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class Filter extends AbstractComponent {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n  getTemplate() {\n    return `<section class=\"main__filter filter container\">\n    ${this._filters.map((filter) => `<input\n        type=\"radio\"\n        id=\"filter__${filter.title}\"\n        class=\"filter__input visually-hidden\"\n        name=\"filter\" ${filter.count === 0 ? `disabled` : ``}\n      />\n    <label for=\"filter__${filter.title}\" class=\"filter__label\">\n      ${filter.title}<span class=\"filter__all-count\"> ${filter.count}</span></label\n    >`).join(``)}\n      </section>`.trim();\n  }\n}\n\n","import {AbstractComponent} from './abstract-component';\n\nexport class LoadMoreButton extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<button class=\"load-more\" type=\"button\">load more</button>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class NoTasks extends AbstractComponent {\n  constructor() {\n    super();\n  }\n\n  getTemplate() {\n    return `<p class=\"board__no-tasks\">\n            Congratulations, all tasks were completed! To create a new click on\n            «add new task» button.\n      </p>\n    `;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class Search extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<section class=\"main__search search container\">\n    <input\n      type=\"text\"\n      id=\"search__input\"\n      class=\"search__input\"\n      placeholder=\"START TYPING — SEARCH BY WORD, #HASHTAG OR DATE\"\n    />\n    <label class=\"visually-hidden\" for=\"search__input\">Search</label>\n  </section>\n  `;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class Menu extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<section class=\"control__btn-wrap\">\n    <input\n      type=\"radio\"\n      name=\"control\"\n      id=\"control__new-task\"\n      class=\"control__input visually-hidden\"\n    />\n    <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n      >+ ADD NEW TASK</label\n    >\n    <input\n      type=\"radio\"\n      name=\"control\"\n      id=\"control__task\"\n      class=\"control__input visually-hidden\"\n      checked\n    />\n    <label for=\"control__task\" class=\"control__label\">TASKS</label>\n    <input\n      type=\"radio\"\n      name=\"control\"\n      id=\"control__statistic\"\n      class=\"control__input visually-hidden\"\n    />\n    <label for=\"control__statistic\" class=\"control__label\"\n      >STATISTICS</label\n    >\n  </section>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class Sort extends AbstractComponent {\n  constructor() {\n    super();\n  }\n  getTemplate() {\n    return `<div class=\"board__filter-list\">\n      <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n      <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n      <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n    </div>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class TaskEdit extends AbstractComponent {\n  constructor({description, dueDate, tags, color, repeatingDays}) {\n    super();\n    this._description = description;\n    this._dueDate = new Date(dueDate);\n    this._tags = tags;\n    this._color = color;\n    this._repeatingDays = repeatingDays;\n  }\n  getTemplate() {\n    return `<article class=\"card card--edit card--${this._color} ${Object.values(this._repeatingDays).some((it) => it === true) ? `card--repeat` : `` }\">\n            <form class=\"card__form\" method=\"get\">\n              <div class=\"card__inner\">\n                <div class=\"card__control\">\n                  <button type=\"button\" class=\"card__btn card__btn--archive\">\n                    archive\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"card__btn card__btn--favorites card__btn--disabled\"\n                  >\n                    favorites\n                  </button>\n                </div>\n\n                <div class=\"card__color-bar\">\n                  <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                    <use xlink:href=\"#wave\"></use>\n                  </svg>\n                </div>\n\n                <div class=\"card__textarea-wrap\">\n                  <label>\n                    <textarea\n                      class=\"card__text\"\n                      placeholder=\"Start typing your text here...\"\n                      name=\"text\"\n                    >${this._description}</textarea>\n                  </label>\n                </div>\n\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <button class=\"card__date-deadline-toggle\" type=\"button\">\n                        date: <span class=\"card__date-status\">yes</span>\n                      </button>\n\n                      <fieldset class=\"card__date-deadline\">\n                        <label class=\"card__input-deadline-wrap\">\n                          <input\n                            class=\"card__date\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"date\"\n                            value=\"${this._dueDate.toDateString()} ${this._dueDate.getHours()}:${this._dueDate.getMinutes()}\"\n                          />\n                        </label>\n                      </fieldset>\n\n                      <button class=\"card__repeat-toggle\" type=\"button\">\n                        repeat:<span class=\"card__repeat-status\">yes</span>\n                      </button>\n\n                      <fieldset class=\"card__repeat-days\">\n                        <div class=\"card__repeat-days-inner\">\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-mo-4\"\n                            name=\"repeat\"\n                            value=\"mo\"\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-mo-4\"\n                            >mo</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-tu-4\"\n                            name=\"repeat\"\n                            value=\"tu\"\n                            checked\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-tu-4\"\n                            >tu</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-we-4\"\n                            name=\"repeat\"\n                            value=\"we\"\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-we-4\"\n                            >we</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-th-4\"\n                            name=\"repeat\"\n                            value=\"th\"\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-th-4\"\n                            >th</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-fr-4\"\n                            name=\"repeat\"\n                            value=\"fr\"\n                            checked\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-fr-4\"\n                            >fr</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            name=\"repeat\"\n                            value=\"sa\"\n                            id=\"repeat-sa-4\"\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-sa-4\"\n                            >sa</label\n                          >\n                          <input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-su-4\"\n                            name=\"repeat\"\n                            value=\"su\"\n                            checked\n                          />\n                          <label class=\"card__repeat-day\" for=\"repeat-su-4\"\n                            >su</label\n                          >\n                        </div>\n                      </fieldset>\n                    </div>\n\n                    <div class=\"card__hashtag\">\n                      <div class=\"card__hashtag-list\">\n\n                        ${(Array.from(this._tags).map((tag) => (`\n                          <span class=\"card__hashtag-inner\">\n                            <input\n                              type=\"hidden\"\n                              name=\"hashtag\"\n                              value=\"${tag}\"\n                              class=\"card__hashtag-hidden-input\"\n                            />\n                            <p class=\"card__hashtag-name\">\n                             #${tag}\n                            </p>\n                          <button type=\"button\" class=\"card__hashtag-name\">#${tag}</button>\n                          <button type=\"button\" class=\"card__hashtag-delete\">\n                            delete\n                          </button>\n                        </span>`.trim()))).join(``)}\n                      </div>\n\n                      <label>\n                        <input\n                          type=\"text\"\n                          class=\"card__hashtag-input\"\n                          name=\"hashtag-input\"\n                          placeholder=\"Type new hashtag here\"\n                        />\n                      </label>\n                    </div>\n                  </div>\n\n                  <div class=\"card__colors-inner\">\n                    <h3 class=\"card__colors-title\">Color</h3>\n                    <div class=\"card__colors-wrap\">\n                      <input\n                        type=\"radio\"\n                        id=\"color-black-4\"\n                        class=\"card__color-input card__color-input--black visually-hidden\"\n                        name=\"color\"\n                        value=\"black\"\n                      />\n                      <label\n                        for=\"color-black-4\"\n                        class=\"card__color card__color--black\"\n                        >black</label\n                      >\n                      <input\n                        type=\"radio\"\n                        id=\"color-yellow-4\"\n                        class=\"card__color-input card__color-input--yellow visually-hidden\"\n                        name=\"color\"\n                        value=\"yellow\"\n                        checked\n                      />\n                      <label\n                        for=\"color-yellow-4\"\n                        class=\"card__color card__color--yellow\"\n                        >yellow</label\n                      >\n                      <input\n                        type=\"radio\"\n                        id=\"color-blue-4\"\n                        class=\"card__color-input card__color-input--blue visually-hidden\"\n                        name=\"color\"\n                        value=\"blue\"\n                      />\n                      <label\n                        for=\"color-blue-4\"\n                        class=\"card__color card__color--blue\"\n                        >blue</label\n                      >\n                      <input\n                        type=\"radio\"\n                        id=\"color-green-4\"\n                        class=\"card__color-input card__color-input--green visually-hidden\"\n                        name=\"color\"\n                        value=\"green\"\n                      />\n                      <label\n                        for=\"color-green-4\"\n                        class=\"card__color card__color--green\"\n                        >green</label\n                      >\n                      <input\n                        type=\"radio\"\n                        id=\"color-pink-4\"\n                        class=\"card__color-input card__color-input--pink visually-hidden\"\n                        name=\"color\"\n                        value=\"pink\"\n                      />\n                      <label\n                        for=\"color-pink-4\"\n                        class=\"card__color card__color--pink\"\n                        >pink</label\n                      >\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"card__status-btns\">\n                  <button class=\"card__save\" type=\"submit\">save</button>\n                  <button class=\"card__delete\" type=\"button\">delete</button>\n                </div>\n              </div>\n            </form>\n          </article>`;\n  }\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class TaskList extends AbstractComponent {\n  getTemplate() {\n    return `<div class=\"board__tasks\"></div>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class Task extends AbstractComponent {\n  constructor({description, dueDate, tags, color, repeatingDays}) {\n    super();\n    this._description = description;\n    this._dueDate = new Date(dueDate);\n    this._tags = tags;\n    this._color = color;\n    this._repeatingDays = repeatingDays;\n  }\n  getTemplate() {\n    return `<article class=\"card card--${this._color} ${Object.values(this._repeatingDays).some((it) => it === true) ? `card--repeat` : `` }\">\n            <div class=\"card__form\">\n              <div class=\"card__inner\">\n                <div class=\"card__control\">\n                  <button type=\"button\" class=\"card__btn card__btn--edit\">\n                    edit\n                  </button>\n                  <button type=\"button\" class=\"card__btn card__btn--archive\">\n                    archive\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"card__btn card__btn--favorites card__btn--disabled\"\n                  >\n                    favorites\n                  </button>\n                </div>\n\n                <div class=\"card__color-bar\">\n                  <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                    <use xlink:href=\"#wave\"></use>\n                  </svg>\n                </div>\n\n                <div class=\"card__textarea-wrap\">\n                  <p class=\"card__text\">${this._description}</p>\n                </div>\n\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <div class=\"card__date-deadline\">\n                        <p class=\"card__input-deadline-wrap\">\n                          <span class=\"card__date\">${this._dueDate.toDateString()}</span>\n                        </p>\n                      </div>\n                    </div>\n\n                    <div class=\"card__hashtag\">\n                      <div class=\"card__hashtag-list\">\n                        ${(Array.from(this._tags).map((tag) => (`\n                          <span class=\"card__hashtag-inner\">\n                          <input type=\"hidden\" name=\"hashtag\" value=\"${tag}\" class=\"card__hashtag-hidden-input\" />\n                          <button type=\"button\" class=\"card__hashtag-name\">#${tag}</button>\n                          <button type=\"button\" class=\"card__hashtag-delete\">delete</button>\n                        </span>`.trim()))).join(``)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </article>`;\n  }\n}\n","export const MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n\nexport const getRandElementFromArr = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nexport const getRandSeveralElementsFromArr = (array, countElements) => {\n  return array.sort(() => 0.5 - Math.random()).slice(0, Math.floor(Math.random() * (countElements + 1)));\n};\n\nexport const getRandTime = () => {\n  return Date.now() + 1 + Math.floor(Math.random() * 7) * MILLISECONDS_IN_DAY;\n};\n\nexport const getRandBoolean = () => {\n  return Boolean(Math.round(Math.random()));\n};\n\nexport const Position = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n  return newElement.firstChild;\n};\n\nexport const removeElement = (element) => {\n  element.remove();\n};\n\nexport const render = (container, element, place) => {\n  switch (place) {\n    case Position.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case Position.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n\nexport const unrender = (element) => {\n  if (element) {\n    element.remove();\n  }\n};\n","import {Menu} from './components/sitemenu';\nimport {Search} from './components/search';\nimport {FilterSection} from './components/filter-sec';\n// import {Filter} from './components/filter';\nimport {Board} from './components/board';\nimport {Sort} from './components/sorting';\n// import {Task} from './components/task';\n// import {TaskEdit} from './components/task-edit';\n// import {LoadMoreButton} from './components/load-more-button';\nimport {loadTask} from './components/data';\nimport {render, Position} from './components/utils';\n// import {NoTasks} from './components/no-tasks';\nimport {BoardController} from './components/board-controller';\n\n// const renderTask = (container, taskMock) => {\n//   const task = new Task(taskMock);\n//   const taskEdit = new TaskEdit(taskMock);\n\n//   const onEscKeyDown = (evt) => {\n//     if (evt.key === `Escape` || evt.key === `Esc`) {\n//       container.replaceChild(task.getElement(), taskEdit.getElement());\n//       document.removeEventListener(`keydown`, onEscKeyDown);\n//     }\n//   };\n\n//   task.getElement()\n//     .querySelector(`.card__btn--edit`)\n//     .addEventListener(`click`, () => {\n//       container.replaceChild(taskEdit.getElement(), task.getElement());\n//       document.addEventListener(`keydown`, onEscKeyDown);\n//     });\n\n//   taskEdit.getElement().querySelector(`textarea`)\n//     .addEventListener(`focus`, () => {\n//       document.removeEventListener(`keydown`, onEscKeyDown);\n//     });\n\n//   taskEdit.getElement().querySelector(`textarea`)\n//     .addEventListener(`blur`, () => {\n//       document.addEventListener(`keydown`, onEscKeyDown);\n//     });\n\n//   taskEdit.getElement()\n//     .querySelector(`.card__save`)\n//     .addEventListener(`click`, () => {\n//       container.replaceChild(task.getElement(), taskEdit.getElement());\n//       document.removeEventListener(`keydown`, onEscKeyDown);\n//     });\n\n//   taskEdit.getElement().querySelector(`.card__delete`)\n//     .addEventListener(`click`, () => {\n//       unrender(taskEdit.getElement());\n//       taskEdit.removeElement();\n//     });\n\n//   render(container, task.getElement(), Position.BEFOREEND);\n// };\n\nconst siteMainElement = document.querySelector(`.main`);\nconst siteHeaderElement = siteMainElement.querySelector(`.main__control`);\n\nrender(siteHeaderElement, new Menu().getElement(), Position.BEFOREEND);\nrender(siteMainElement, new Search().getElement(), Position.BEFOREEND);\nrender(siteMainElement, new FilterSection().getElement(), Position.BEFOREEND);\nrender(siteMainElement, new Board().getElement(), Position.BEFOREEND);\n\nconst boardElement = siteMainElement.querySelector(`.board`);\nrender(boardElement, new Sort().getElement(), Position.AFTERBEGIN);\n\nconst tasksContainer = document.querySelector(`.board__tasks`);\nconst boardController = new BoardController(tasksContainer, loadTask());\nboardController.init();\n\n// const taskListElement = siteMainElement.querySelector(`.board__tasks`);\n\n// loadTask().forEach((taskMock) => renderTask(taskListElement, taskMock));\n\n// const mainFilterContainer = siteMainElement.querySelector(`.main__filter`);\n\n// render(mainFilterContainer, new Filter(taskFilters).getElement(), Position.BEFOREEND);\n\n// render(boardElement, new LoadMoreButton().getElement(), Position.BEFOREEND);\n\n// const tasksElement = () => Array.from(document.querySelectorAll(`article`));\n// const loadButtonElement = document.querySelector(`.load-more`);\n\n// const hideLoadButton = () => {\n//   loadButtonElement.style.display = `none`;\n// };\n// const displayLoadButton = () => {\n//   loadButtonElement.style.display = `block`;\n// };\n\n// const hideMoreTasks = (quantity) => {\n//   Array.from(tasksElement())\n//     .slice(quantity)\n//     .forEach((el) => {\n//       el.style.display = `none`;\n//     });\n// };\n\n// const QUANTITY_LOAD_TASK = 8;\n\n// const tasksToLoad = () => tasksElement()\n//   .filter((el, index) =>\n//     el.style.display === `none` && index >= QUANTITY_LOAD_TASK);\n\n// const toogleLoadButton = () =>\n//   tasksToLoad().length > 0 ? displayLoadButton() : hideLoadButton();\n\n// const addMoreTasks = () => {\n//   tasksToLoad(QUANTITY_LOAD_TASK)\n//     .slice(0, QUANTITY_LOAD_TASK)\n//     .map((it) => {\n//       it.style.display = `block`;\n//     });\n// };\n\n// if (tasksElement().length > QUANTITY_LOAD_TASK) {\n//   hideMoreTasks(QUANTITY_LOAD_TASK);\n// }\n\n// loadButtonElement.addEventListener(`click`, () => {\n//   addMoreTasks();\n//   toogleLoadButton();\n// });\n\n// const archiveTasks = taskFilters.find((item) => item.title === `ARCHIVE`);\n// if ((taskListElement.childElementCount === 0) || (archiveTasks && archiveTasks.count === taskListElement.childElementCount)) {\n//   Array.from(boardElement.children).forEach((it) => {\n//     unrender(it);\n//   });\n//   render(boardElement, new NoTasks().getElement(), Position.BEFOREEND);\n// }\n\n\n"],"sourceRoot":""}